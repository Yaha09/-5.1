
#   Задание: Написать функцию, которая принимает аргумент “имя человека“ 
#   в виде строки (вы можете добавить и другие аргументы по своему усмотрению), и возвращает его номер телефона.
#   В случае, если такого человека в справочнике нет, функция возвращает строку "undefined".
#   Вызвать функцию для нескольких различных имен, обязательно для имени, которого в словаре-справочнике нет.

#         Дополнительное задание:
# Подумать о "чистоте" и эффективности функции. Как функция получает доступ к словарю-справочнику?
# Выберите наилучший вариант:
# Словарь-справочник создается и хранится внутри функции
# Словарь-справочник это глобальный объект (переменная), внутри функции мы обращаемся к ней
# Словарь-справочник это глобальный объект (переменная), которая передается в функцию как параметр.


from time import perf_counter
GUIDE = {
"Иван": "3916", "Катя": "1298", "Лена": "0010",
"Саша": "2116", "Миша": "3458", "Маша": "5010",
"Таня": "3346", "Вася": "4296", "Рома": "0010"
}



def search1(name):           # Словарь-справочник создается и хранится внутри функции
    guide = {
"Иван": "3916", "Катя": "1298", "Лена": "0010",
"Саша": "2116", "Миша": "3458", "Маша": "5010",
"Таня": "3346", "Вася": "4296", "Рома": "0010"
}

    if name not in guide:  # проверка наличия ключа в словаре
        return "undefined"
    return guide[name]



def search2():              # Словарь-справочник это глобальный объект (переменная), внутри функции мы обращаемся к ней
    if NaMe not in GUIDE:  
        return "undefined"
    return GUIDE[NaMe]

def search3(name):          # Словарь-справочник это глобальный объект (переменная), которая передается в функцию как параметр.
    if name not in GUIDE:  
        return "undefined"
    return GUIDE[name]



for NaMe in ["Миша","Маша","Катя","Таня", "Вася", "Рома", "None"]:
    print(f'{NaMe} : №1 {search1(NaMe)} №2 {search2()} №3 {search3(NaMe)}')



